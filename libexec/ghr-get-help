#!/usr/bin/env bash
# Summary: Display help for a command
# Usage: ghr-get help [--usage] COMMAND
source $GHR_GET_ROOT/lib/common-lib.bash

function get_command_path() {
  local command="$1"
  command -v ghr-get-"$command" || true
}

function parse_help() {
  local command="$1"
  local filename=$(get_command_path "$command")
  [ -z "$filename" ] && return

  cat "$filename" | awk '
    /^# Summary:/ {
      summary = substr($0, 12)
      next
    }

    /^# Usage:/ {
      is_usage = 1
      usage = substr($0, 3)
      next
    }

    /^# ( *$|      )/ && is_usage {
      usage = usage "\n" substr($0, 3)
      next
    }

    /^# / {
      is_usage = 0
      help = help "\n" substr($0, 3)
    }

    /^[^#]/ {
      exit
    }

    function trim(str) {
      sub(/^\n*/, "", str)
      sub(/\n*$/, "", str)
      return str
    }

    END {
      print "summary=\"" summary "\""
      print "usage=\"" usage "\""
      print "help=\"" trim(help) "\""
    }
  '
}

function print_summary() {
  local command="$1"
  local summary usage help
  eval "$(parse_help "$command")"
  if [ -n "$summary" ]; then
    printf "   %-15s   %s\n" "$command" "$summary"
  fi
}

function print_help() {
  local command="$1" is_usage="$2"
  local summary usage help
  eval "$(parse_help "$command")"

  # show usage
  if [ -n "$usage" ]; then
    echo "$usage"
  else
    echo "Usage: ghr-get $command"
  fi
  [ -n "$is_usage" ] && return

  # show help
  [ -n "$help" ] || help="$summary"
  echo
  echo "$help"
  echo
}

# hoge
unset is_usage
if [ "$1" == "--usage" ]; then
  is_usage=1
  shift
fi

command="$1"
if [ -z "$command" ]; then
  echo "Usage: ghr-get <command> [<args]"
  [ -z "$usage" ] || exit
  echo
  echo "Some useful ghr-get commands are:"
  for cmd in commands install uninstall list; do
    print_summary "$cmd"
  done
  echo
  echo "See 'ghr-get help <command>' for information on a specific command."
else
  if [ -n "$(get_command_path "$command")" ]; then
    print_help "$command" "$is_usage"
  else
    abort "no such command '$command'"
  fi
fi
